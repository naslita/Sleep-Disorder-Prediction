!pip install feature-engine
!pip install xgboost
!pip install shap

#Pandas Config
import pandas as pd
pd.set_option("display.max_columns",None)

#Numpy Config
import numpy as np

#Fixings warnings
import warnings
warnings.filterwarnings('ignore')

#Visualisation
import seaborn as sns
import plotly.express as px
from termcolor import colored
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import plotly.figure_factory as ff

#Preprocessing
import scipy.stats as stats
from statsmodels.stats.outliers_influence import variance_inflation_factor as vif
from statsmodels.tools.tools import add_constant
from sklearn.preprocessing import LabelEncoder ,StandardScaler

#Modeling
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_validate, StratifiedKFold, RandomizedSearchCV, cross_val_score
from sklearn.model_selection import train_test_split as tts
from sklearn.model_selection import learning_curve
from sklearn import model_selection
from sklearn import svm,tree
from sklearn.svm import SVC
from sklearn import ensemble
from sklearn.datasets import make_classification
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
import xgboost as xgb
from xgboost import XGBClassifier
from sklearn import metrics
from sklearn.metrics import roc_auc_score
from sklearn.metrics import roc_curve, auc
from sklearn.metrics import mean_squared_error, classification_report
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_score
from sklearn.metrics import recall_score
from sklearn.metrics import f1_score
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
from sklearn.svm import SVC, LinearSVC
from sklearn.multiclass import OneVsOneClassifier
from sklearn.multiclass import OneVsRestClassifier
import shap

# Oversampling method
from sklearn.model_selection import train_test_split
from imblearn.over_sampling import SMOTE
